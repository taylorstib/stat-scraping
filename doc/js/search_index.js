var search_data = {"index":{"searchIndex":["countgen","object","parser","scraper","generate_count()","get_html_page()","new()","new()","open_pages()","write_to_file()"],"longSearchIndex":["countgen","object","parser","scraper","countgen#generate_count()","scraper#get_html_page()","parser::new()","scraper::new()","parser#open_pages()","scraper#write_to_file()"],"info":[["CountGen","","CountGen.html","",""],["Object","","Object.html","",""],["Parser","","Parser.html","","<p>Object responsible for grabbing the HTML pages out of the local file\nstorage,  and extracting the stats …\n"],["Scraper","","Scraper.html","","<p>Scrapes the web using Nokogiri, saves the webpages as a local variable,\nthen writes all the pages to …\n"],["generate_count","CountGen","CountGen.html#method-i-generate_count","(step_size=40)","<p>Generates an array of numbers, counting by how many player records are on\neach HTML page. Allows other …\n"],["get_html_page","Scraper","Scraper.html#method-i-get_html_page","()","<p>Nokogiri grabs the HTML, parsing it to determine how many pages need to be\nscraped for the given position, …\n"],["new","Parser","Parser.html#method-c-new","(position='passing', year='2014')",""],["new","Scraper","Scraper.html#method-c-new","(position='receiving', year='2013')","<p>Initialize the Scraper class with the position and year you want stats for.\nOptions include &#39;passing&#39;, …\n"],["open_pages","Parser","Parser.html#method-i-open_pages","()","<p>Checks to see if the file exists, then opens it and appends the file to the\n@pages variable\n"],["write_to_file","Scraper","Scraper.html#method-i-write_to_file","()","<p>Takes the array @pages and writes each entry to a new file for holding and\nfuture data parsing\n"]]}}